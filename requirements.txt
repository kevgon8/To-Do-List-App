class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        #lkst to keep track of the recentknown ===
        #list to keep track if letters
        l1 = []

        #final string that will be used for length
        final_str = ""

        #iteraye over every letter of string
        for i in range(len(s)):
            #if letter aready present in list
            if s[i] in l1:
                #check if repeated letter and letter before it are same
                #if same supperate both same letters 
                if s[i] == s[i-1]:
                    final_str += "|" + s[i]
                #else seperate the string such that the previous letter us included in both seperated strings
                else:
                    final_str += "|" + s[i-1] + s[i]

            #if that letter not already there in list
            else:
                #add to list and final str
                l1.append(s[i])
                final_str += s[i]

        str_list = final_str.split("|")

        return len(max(str_list, key = len))  
    
solution = Solution()
print(solution.lengthOfLongestSubstring("anviaj"))